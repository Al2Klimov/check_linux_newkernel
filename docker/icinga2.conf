object Host NodeName {
	check_command = "hostalive"
	enable_active_checks = false

	vars.check_linux_newkernel = true
}

object EventCommand "linux_newkernel" {
	command = [ "/usr/bin/perl", "-e", {{{

sub chKrnl {
	{
		local $$/ = undef;
		local @ARGV = ('/proc/uptime');
		$$_ = <>
	}

	if (/^(\d+)/) {
		my $$mtime = time() - $$1 + shift();

		open(my $$f, '>', '/boot/vmlinuz');
		utime($$mtime, $$mtime, '/boot/vmlinuz')
	}
}

&{$${{
	'OK' => sub {
		sleep(60);
		chKrnl(30)
	},
	'WARNING' => sub {
		sleep(60);
		chKrnl(30)
	},
	'CRITICAL' => sub {
		sleep(60);
		chKrnl(-30)
	}
}}{'$service.state$'}}()

}}} ]
}

apply Service "linux_newkernel" {
	check_command = "linux_newkernel"
	check_interval = 0.5s
	retry_interval = 0.5s

	event_command = "linux_newkernel"

	if (host.zone != "") {
		command_endpoint = host.name
	}

	assign where host.vars.check_linux_newkernel
}
